/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lecarsystem;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import static lecarsystem.LeCarSystem.employeeStatus;
/**
 *
 * @author jze20
 */
public class SalesPages extends javax.swing.JFrame {
    private static String fileSource;
    private Function function = new Function();
    /**
     * Creates new form SalesPages
     */
 
    
    public SalesPages() {
        try{
            BufferedReader reader = new BufferedReader(new FileReader("path.txt"));
            String line = reader.readLine();
            String [] filepath = line.split(",");
            fileSource = filepath[2];
        }catch (Exception e){
            e.printStackTrace();
        }
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        try{
            BufferedReader reader = new BufferedReader(new FileReader("path.txt"));
            String line = reader.readLine();
            String [] filepath = line.split(",");

            File sales_csv = new File(filepath[2]);
            DefaultTableModel sales_data = new DefaultTableModel();

            try{
                int start = 0;
                InputStreamReader inputstreamreader = new InputStreamReader(new FileInputStream(sales_csv));
                CSVParser csvParser = CSVFormat.DEFAULT.parse(inputstreamreader);

                for(CSVRecord csvRecord:csvParser){
                    if(start == 0){
                        start =1;
                        sales_data.addColumn(csvRecord.get(0));
                        sales_data.addColumn(csvRecord.get(1));
                        sales_data.addColumn(csvRecord.get(2));
                        sales_data.addColumn(csvRecord.get(3));
                        sales_data.addColumn(csvRecord.get(4));
                    }
                    else
                    {
                        if(LeCarSystem.employeeStatus == "0"){
                            if(LeCarSystem.employeeID.equals(csvRecord.get(4))){
                                Vector row = new Vector();
                                row.add(csvRecord.get(0));
                                row.add(csvRecord.get(1));
                                row.add(csvRecord.get(2));
                                row.add(csvRecord.get(3));
                                row.add(csvRecord.get(4));
                                sales_data.addRow(row);

                            }

                        }else{
                            Vector row = new Vector();
                            row.add(csvRecord.get(0));
                            row.add(csvRecord.get(1));
                            row.add(csvRecord.get(2));
                            row.add(csvRecord.get(3));
                            row.add(csvRecord.get(4));
                            sales_data.addRow(row);
                        }

                    }
                }

            }catch (Exception e){
                System.out.println("Error");
            }
            SalesTable = new javax.swing.JTable();
            btnAddSales = new javax.swing.JButton();
            btnLogout = new javax.swing.JButton();
            btnSearch = new javax.swing.JButton();
            txtName = new javax.swing.JTextField();
            txtYear = new javax.swing.JTextField();
            txtMonth = new javax.swing.JTextField();
            jLabel2 = new javax.swing.JLabel();
            jLabel3 = new javax.swing.JLabel();
            jLabel4 = new javax.swing.JLabel();
            btnImport = new javax.swing.JButton();
            jMenuBar1 = new javax.swing.JMenuBar();
            jMenu1 = new javax.swing.JMenu();
            jMenuItem1 = new javax.swing.JMenuItem();
            jMenuItem2 = new javax.swing.JMenuItem();
            jMenuItem3 = new javax.swing.JMenuItem();
            jMenuItem4 = new javax.swing.JMenuItem();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            jLabel1.setText("Sales");
            jLabel1.setFont(new Font("Sans-Serif",Font.BOLD,18));

            jScrollPane1.getViewport().add(SalesTable);

            SalesTable.setModel(sales_data);
        }catch(Exception e){
            e.printStackTrace();
        }
        jScrollPane1.setViewportView(SalesTable);

        btnAddSales.setText("Add Sales");
        btnAddSales.setBackground(Color.ORANGE);
        btnAddSales.setFont(new Font("Serif",Font.PLAIN,13));
        btnAddSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSales(evt);
            }
        });

        btnLogout.setBackground(Color.BLUE);
        btnLogout.setForeground(Color.WHITE);
        btnLogout.setFont(new Font("Serif",Font.PLAIN,13));
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Logout(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search(evt);
            }
        });

        jLabel2.setText("Year :");

        jLabel3.setText("Month :");

        jLabel4.setText("Word :");

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Import(evt);
            }
        });

        jMenu1.setText("Tables");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem1.setText("Sales");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem2.setText("Customer");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem3.setText("Vehicle");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        if(LeCarSystem.employeeStatus == "1"){
            jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
            jMenuItem4.setText("Employee");
            jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem4ActionPerformed(evt);
                }
            });
            jMenu1.add(jMenuItem4);
        }

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAddSales, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnImport))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnLogout)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSales, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddSales(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSales
        // TODO add your handling code here:
        new AddSales().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddSales

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == jMenuItem2){
            new CustomerPage().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == jMenuItem3){
            new VehiclePage().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == jMenuItem4){
            new EmployeePage().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void Logout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Logout
        //btnLogoutn2d your handling code here:
        if (evt.getSource() == btnLogout) 
        {
            int clear = JOptionPane.showConfirmDialog(null, "Logout ?");
            if (clear == JOptionPane.YES_OPTION)
            {  
                JOptionPane.showMessageDialog(null,"Logout Successful");
                employeeStatus = "0";
                new LeCarSystem().setVisible(true);
                this.dispose();
                
            } 
        } 
    }//GEN-LAST:event_Logout

    private void Search(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search
        // TODO add your handling code here:
        if(evt.getSource() == btnSearch){
            String word = txtName.getText();
            String yearInput = txtYear.getText();
            String monthInput = txtMonth.getText();
            int year,month;
            
            if (yearInput.isEmpty()){year = 0;}
            else {year = Integer.parseInt(yearInput);}

            if (monthInput.isEmpty()){month = 0;}
            else {month = Integer.parseInt(monthInput);}
            
            try{
                searchFilter(word,month,year);
            }catch (Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_Search

    private void Import(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Import
        // TODO add your handling code here:
        if(evt.getSource() == btnImport){
        function.importfunction(2);
        new SalesPages().setVisible(true);
        this.dispose();
        }
    }//GEN-LAST:event_Import

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesPages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesPages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesPages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesPages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesPages().setVisible(true);
                
            }
        });
    }
    
    private void searchFilter(String word, int month, int year) throws Exception{
        File sales_csv = new File(fileSource);
        DefaultTableModel NEW_SALES = new DefaultTableModel();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");

        try{
            int start = 0;
            InputStreamReader inputstreamreader = new InputStreamReader(new FileInputStream(sales_csv));
            CSVParser csvParser = CSVFormat.DEFAULT.parse(inputstreamreader);

            
            for(CSVRecord csvRecord:csvParser){
                if(start == 0){
                    start =1;
                    NEW_SALES.addColumn(csvRecord.get(0));
                    NEW_SALES.addColumn(csvRecord.get(1));
                    NEW_SALES.addColumn(csvRecord.get(2));
                    NEW_SALES.addColumn(csvRecord.get(3));
                    NEW_SALES.addColumn(csvRecord.get(4));
                }
                else
                { 
                    if(LeCarSystem.employeeStatus == "0"){
                        if(LeCarSystem.employeeID.equals(csvRecord.get(4))){
                            
                            String date = csvRecord.get(1);
                            LocalDateTime dateTime = LocalDateTime.parse(date, formatter);
                            int monthValue = dateTime.getMonthValue();
                            int yearValue = dateTime.getYear();
                                                        
                            if((csvRecord.get(0).contains(word) || csvRecord.get(1).contains(word) 
                                || csvRecord.get(2).contains(word) || csvRecord.get(3).contains(word) 
                                || csvRecord.get(4).contains(word)) && (month == monthValue || month == 0) && (year == yearValue || year == 0)){
                                
                                Vector row = new Vector();
                                row.add(csvRecord.get(0));
                                row.add(csvRecord.get(1));
                                row.add(csvRecord.get(2));
                                row.add(csvRecord.get(3));
                                row.add(csvRecord.get(4));
                                NEW_SALES.addRow(row);  
                            }
                        }
                            
                    }else{
                                                
                        String date = csvRecord.get(1);
                        LocalDateTime dateTime = LocalDateTime.parse(date, formatter);
                        int monthValue = dateTime.getMonthValue();
                        int yearValue = dateTime.getYear();
                                                        
                        if((csvRecord.get(0).contains(word) || csvRecord.get(1).contains(word) 
                            || csvRecord.get(2).contains(word) || csvRecord.get(3).contains(word) 
                            || csvRecord.get(4).contains(word)) && (month == monthValue || month == 0) && (year == yearValue || year == 0)){
                            
                            Vector row = new Vector();
                            row.add(csvRecord.get(0));
                            row.add(csvRecord.get(1));
                            row.add(csvRecord.get(2));
                            row.add(csvRecord.get(3));
                            row.add(csvRecord.get(4));
                            NEW_SALES.addRow(row); 
                        }  
                    }


                }
            }
        }catch (Exception e){
            e.printStackTrace();
        }
        
        SalesTable.setModel(NEW_SALES);
        jScrollPane1.setViewportView(SalesTable);
    }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SalesTable;
    private javax.swing.JButton btnAddSales;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
